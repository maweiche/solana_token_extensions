'use client'
import { Analytics } from '@vercel/analytics/react';
import { Inter } from "next/font/google";
import { useMemo } from 'react';
import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';
import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';
import { WalletModalProvider } from '@solana/wallet-adapter-react-ui';
import { clusterApiUrl } from '@solana/web3.js';
import '@solana/wallet-adapter-react-ui/styles.css';
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });



// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

   // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.
   const network = WalletAdapterNetwork.Devnet;

   // You can also provide a custom RPC endpoint.
   const endpoint = useMemo(() => clusterApiUrl(network), [network]);

   const wallets = useMemo(
       () => [
           /**
            * Wallets that implement either of these standards will be available automatically.
            *
            *   - Solana Mobile Stack Mobile Wallet Adapter Protocol
            *     (https://github.com/solana-mobile/mobile-wallet-adapter)
            *   - Solana Wallet Standard
            *     (https://github.com/solana-labs/wallet-standard)
            *
            * If you wish to support a wallet that supports neither of those standards,
            * instantiate its legacy wallet adapter here. Common legacy adapters can be found
            * in the npm package `@solana/wallet-adapter-wallets`.
            */
       ],
       // eslint-disable-next-line react-hooks/exhaustive-deps
       [network]
   );

  return (
    
        <html lang="en">
          <ConnectionProvider endpoint={endpoint}>
            <WalletProvider wallets={wallets} autoConnect>
              <WalletModalProvider>
                  <body className={inter.className}>
                    {children}
                    <Analytics />
                  </body>
              </WalletModalProvider>
            </WalletProvider>
          </ConnectionProvider>
        </html>
        
  );
}
